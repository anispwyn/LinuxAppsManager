#!/usr/bin/env bash

# Define some color variables
TOMATO='\e[1;38;2;255;99;71m'
PEACH='\e[1;38;2;255;204;153m'
GREEN='\033[1m\033[38;2;0;255;0m'
RED='\033[1m\033[38;5;196m'
AQUA='\e[1;38;2;0;255;255m'
NC='\033[0m' # No Color

# Define a function to exit the script
exit_script() {
    clear
    cd ~ # Change directory to home
    # Get the name of the current shell
    shell_name=$(basename "$SHELL")
    # Run the exec command according to the shell
    case $shell_name in
    bash) exec bash ;;
    zsh) exec zsh ;;
    ksh) exec ksh ;;
    csh) exec csh ;;
    tcsh) exec tcsh ;;
    fish) exec fish ;;
    *) echo "Unknown shell: $shell_name" ;;
    esac
}

# Set a trap to call the function when SIGTSTP(ctrl + z) & SIGINT(ctrl + c) is received
trap exit_script SIGTSTP
trap exit_script SIGINT

# Go back to main menu
main_menu() {
    chmod +x manager
    ./manager
}

# Get the name of the current shell
shell=$(basename "$SHELL")

# Get the current working directory of the script
pwd=$(pwd)

# Show heading in middle
clear
echo ""
COLUMNS=$(tput cols)
t1="=========================="
t2="Linux Apps Manager Setup"
printf "${TOMATO}%*s\n${NC}" $(((${#t1} + $COLUMNS) / 2)) "$t1"
printf "${TOMATO}%*s\n${NC}" $(((${#t2} + $COLUMNS) / 2)) "$t2"
printf "${TOMATO}%*s\n${NC}" $(((${#t1} + $COLUMNS) / 2)) "$t1"
echo ""

# Ask user what option they want to choose
echo -e "${PEACH}Select Your Choice:${NC}"
echo " 1. Install Linux Apps Manager In System"
echo " 2. Uninstall Linux Apps Manager From System"
echo " 3. Go Back To Main Menu"
read -p "Enter your choice: " choice

if [ $choice -eq 1 ]; then
    echo ""
    # Check if the configuration file exists
    if [ "$shell" = "fish" ]; then
        config_file="$HOME/.config/fish/config.fish"
    else
        config_file="$HOME/.${shell}rc"
    fi

    if [ -f "$config_file" ]; then
        # Check if the lam function is already defined in the file
        if grep -q "function lam" "$config_file"; then
            # Delete the existing lam function
            sed -i '/function lam/,/^end/d' "$config_file"
            # Delete the existing alias
            sed -i '/alias lam="lam_function"/d' "$config_file"
        fi

        # Append the function definition to the end of the file
        if [ "$shell" = "fish" ]; then
            echo "" >> "$config_file"
            cat >> "$config_file" <<EOF
function lam_function
  # Define the target directory
  set target_dir "$pwd"

  # Change to the target directory
  cd \$target_dir

  # Check if manager exists
  if test -f manager
    chmod +x manager
    ./manager
  else
    echo "Linux Apps Manager is not available in your system."
  end
end

alias lam="lam_function"
EOF
        else
            tail -c1 "$config_file" | read -r _ || echo "" >> "$config_file"
            cat >> "$config_file" <<EOF
lam () {
  # Go to the saved directory
  cd "$pwd"

  # Check if manager exists
  if [ -f manager ]; then
    chmod +x manager && ./manager
  else
    echo "Linux Apps Manager is not available in your system."
  fi
}

EOF
        fi

        echo -e "${AQUA}Linux Apps Manager has been successfully installed on your system. Important notes:${NC}"
        echo "• To run Linux Apps Manager, type 'lam' in terminal."
        echo "• Don't delete the directory where you cloned the repository."
        echo ""
        read -n 1 -s -r -p "Press any key to continue..."
        echo
        clear
        cd ~
        $shell

    else
        # Print an error message & create the config file
        echo -e "${RED}${config_file} file not found.${NC}"
        sleep 1
        echo -e "${GREEN}Fixing this issue...${NC}"
        sleep 3
        mkdir -p "$(dirname "$config_file")"
        touch "$config_file"
        echo -e "${AQUA}Issue fixed. Try option 1 again.${NC}"
        sleep 3
        chmod +x setup && ./setup
    fi

elif [ $choice -eq 2 ]; then
    echo ""
    # Check if the lam function is defined in the config file
    if [ "$shell" = "fish" ]; then
        config_file="$HOME/.config/fish/config.fish"
    else
        config_file="$HOME/.${shell}rc"
    fi

    if [ "$shell" = "fish" ]; then
        if grep -q "function lam" "$config_file"; then
            # Delete function and alias
            sed -i '/function lam/,/^end/d' "$config_file"
            sed -i '/alias lam="lam_function"/d' "$config_file"
        fi
    else
        if grep -q "lam ()" "$config_file"; then
            # Delete function and alias
            sed -i '/lam ()/,/^}/d' "$config_file"
        fi
    fi

    rm -rf "$pwd"
    if [ $? -eq 0 ]; then # check the exit status of rm command
        echo -e "${GREEN}Uninstalled successfully.${NC}"
        sleep 3
        exit_script
    else
        echo -e "${RED}Failed to uninstall!${NC}"
    fi

elif [ $choice -eq 3 ]; then
    main_menu

else
    echo ""
    echo -e "${RED}Invalid choice. Please try again.${NC}"
    sleep 3
    chmod +x setup && ./setup
fi
